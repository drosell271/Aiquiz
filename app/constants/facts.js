import exp from 'constants'

export const facts = [
    'Comprender los fundamentos de la programación es crucial para cualquier lenguaje que aprendas.',
    'Los comentarios claros hacen que tu código sea más comprensible para otros desarrolladores.',
    'Usar nombres de variables descriptivos mejora la legibilidad de tu código.',
    'Evita repetir código; utiliza funciones y clases para reutilizar código similar.',
    'Entender las estructuras de control como if, else y bucles es esencial para controlar el flujo del programa.',
    'Aprende a manejar errores y excepciones para escribir código robusto y a prueba de fallos.',
    'Comprende la diferencia entre variables locales y globales y su alcance en diferentes partes del programa.',
    'Familiarízate con las estructuras de datos como listas, diccionarios y conjuntos para manejar datos de manera eficiente.',
    'Aprende sobre algoritmos de ordenamiento y búsqueda para trabajar con grandes conjuntos de datos de manera eficiente.',
    'Utiliza sistemas de control de versiones como Git para rastrear cambios y colaborar en proyectos de programación.',
    'Entiende la diferencia entre tipos de datos como enteros, flotantes, cadenas y booleanos y cuándo usar cada uno.',
    'Aprende sobre funciones y cómo pueden dividir el código en partes reutilizables y fáciles de entender.',
    'Utiliza lógica descriptiva, como pseudocódigo o diagramas de flujo, antes de comenzar a codificar algoritmos complejos.',
    'Entiende cómo funcionan las funciones recursivas y cuándo usarlas para resolver problemas de manera elegante.',
    'Aprende sobre los operadores lógicos (AND, OR, NOT) y cómo se utilizan en las condiciones para tomar decisiones en el código.',
    'Saber cuándo y cómo utilizar bucles (for, while) es fundamental para iterar sobre datos y ejecutar código repetidamente.',
    'Usar constantes para valores que no cambian durante la ejecución del programa hace que el código sea más claro y mantenible.',
    'Conocer los principios SOLID (Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, Dependency Inversion) mejora la estructura del código.',
    'Aprende sobre estructuras de datos avanzadas como árboles y grafos para problemas más complejos de algoritmos y datos.',
    'Practica la resolución de problemas a través de plataformas en línea como LeetCode o HackerRank para mejorar tus habilidades de codificación.',
    'Comprender la complejidad temporal de los algoritmos te ayuda a elegir el enfoque más eficiente para resolver problemas.',
    'Aprende sobre la gestión de memoria, especialmente en lenguajes como C o C++, para evitar fugas de memoria y errores relacionados con la memoria.',
    'Familiarízate con las mejores prácticas de codificación en tu lenguaje favorito para escribir código legible y eficiente.',
    'Conoce las bibliotecas y marcos de trabajo populares en tu área de interés, ya que pueden facilitarte muchas tareas comunes.',
    'Prueba tu código con diversos casos de prueba para asegurarte de que funcione correctamente en diferentes situaciones.',
    'Participar en la comunidad de programadores te expone a diferentes estilos y técnicas de codificación y te ayuda a aprender continuamente.',
    'No dudes en pedir ayuda cuando te enfrentes a problemas complejos; a menudo, otros desarrolladores han pasado por situaciones similares.',
    'Recuerda que la programación es un proceso continuo de aprendizaje; siempre hay algo nuevo por descubrir y aprender en este campo en constante evolución.',
]

export const jokes = [
    'Why do programmers prefer dark mode? Because light attracts bugs.',
    'Why did the JavaScript developer go broke? Because he lost his TypeScript.',
    'Why was the math book sad? Because it had too many problems.',
    "Why do programmers prefer wearing glasses? Because they can't C#.",
    "Why don't programmers like nature? It has too many bugs.",
    'Why do programmers hate nature photographers? They always focus on the bugs.',
    "Why was the JavaScript developer sad? Because he didn't Node how to Express himself.",
    "Why do Java developers wear glasses? Because they don't C#!",
    'Why was the computer cold? It left its Windows open!',
    "Why did the programmer quit his job? Because he didn't get arrays.",
    'Why did the developer go broke? Because he lost his cache.',
    "Why did the programmer go broke? Because he couldn't find an Open Source of income.",
    'Why do C# and Java developers keep breaking their keyboards? Because they use a strongly typed language.',
]
