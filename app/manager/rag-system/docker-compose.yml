# Docker Compose para Sistema RAG con Qdrant
# 
# Este archivo configura la infraestructura completa para el sistema RAG:
# - Qdrant: Base de datos vectorial de alto rendimiento
# - Dashboard web de Qdrant
#
# Uso:
#   docker-compose up -d      # Iniciar servicios
#   docker-compose down       # Detener servicios
#   docker-compose logs       # Ver logs

version: '3.8'

services:
  # Base de datos vectorial Qdrant
  qdrant:
    image: qdrant/qdrant:latest
    container_name: aiquiz-qdrant
    ports:
      - "6333:6333"      # API REST
      - "6334:6334"      # gRPC API
    volumes:
      - qdrant_data:/qdrant/storage
      - ./qdrant_config:/qdrant/config
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
      - QDRANT__STORAGE__STORAGE_PATH=/qdrant/storage
    restart: unless-stopped
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Dashboard web de Qdrant (opcional, para debugging)
  qdrant-dashboard:
    image: qdrant/qdrant:latest
    container_name: aiquiz-qdrant-dashboard
    ports:
      - "6335:6333"
    volumes:
      - qdrant_data:/qdrant/storage:ro
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__WEB_UI__ENABLED=true
    restart: unless-stopped
    networks:
      - rag-network
    depends_on:
      qdrant:
        condition: service_healthy
    profiles:
      - monitoring

volumes:
  # Volumen persistente para datos de Qdrant
  qdrant_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/qdrant

networks:
  # Red dedicada para servicios RAG
  rag-network:
    driver: bridge
    name: aiquiz-rag-network